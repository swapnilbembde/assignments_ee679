training_data = {   'inputs/zero_to_nine_Mayur1.wav', ...
            'inputs/zero_to_nine_Mayur2.wav', ...
            'inputs/zero_to_nine_Shrikant1.wav', ...
            'inputs/zero_to_nine_Shrikant2.wav', ...
            'inputs/zero_to_nine_Vedhas1.wav', ...
            'inputs/zero_to_nine_Vedhas2.wav', ...
            'inputs/zero_to_nine_Niramay1.wav', ...
            'inputs/zero_to_nine_Niramay2.wav', ...
            'inputs/zero_to_nine_divyansh1.wav', ...
            'inputs/zero_to_nine_divyansh2.wav', ...
            'inputs/zero_to_nine_Jatin1.wav', ...
            'inputs/zero_to_nine_Jatin2.wav', ...
            'inputs/zero_to_nine_Hitesh1.wav', ...
            'inputs/zero_to_nine_Hitesh2.wav', ...
            'inputs/zero_to_nine_Kaustuv1.wav', ...
            'inputs/zero_to_nine_Kaustuv2.wav', ...
            'inputs/zero_to_nine_Ankita1.wav', ...
            'inputs/zero_to_nine_Ankita2.wav', ...
            'inputs/zero_to_nine_Mansi1.wav', ...
            'inputs/zero_to_nine_Mansi2.wav', ...
            'inputs/zero_to_nine_Kamini1.wav', ...
            'inputs/zero_to_nine_Kamini2.wav', ...
            'inputs/zero_to_nine_Pragya1.wav', ...
            'inputs/zero_to_nine_Pragya2.wav', ...
            'inputs/zero_to_nine_Prarthana1.wav', ...
            'inputs/zero_to_nine_Prarthana2.wav', ...
            'inputs/zero_to_nine_Reshma1.wav', ...
            'inputs/zero_to_nine_Reshma2.wav', ...
            'inputs/zero_to_nine_Richa1.wav', ...
            'inputs/zero_to_nine_Richa2.wav', ...
            'inputs/zero_to_nine_Shradha1.wav', ...
            'inputs/zero_to_nine_Shradha2.wav'
            
         };
%%% calcMFCC is checked using this script
file_no = 1;
lowf = 130;
highf = 5200;
nFilt = 40;
fftSize = 1024;
filename = training_data{file_no};
[input_data, fSampling] = audioread(filename);
xSize = size(input_data, 1);
input_data = input_data - 0.95 * [0; input_data(1:xSize-1)];

FrameSize = fSampling/100; %ms
nVectors = floor(xSize/FrameSize) - 1;
mfcc = zeros(13, nVectors);

melFiltBank = melFilter(nFilt, lowf, highf, fSampling, fftSize);

for i = 1:nVectors

    win = hamming(FrameSize).*input_data(((i-1)*FrameSize/2+1):((i-1)*FrameSize/2+FrameSize));

    winFFT = abs(fft(win, fftSize));
    winFFT = winFFT(1:size(melFiltBank, 2));
    FrameEnergy = (winFFT.^2)/(fftSize);

    melEnergy = log(melFiltBank*FrameEnergy);

    allCoeffs = dct(melEnergy);
    mfcc(:, i) = allCoeffs(1:13);

end